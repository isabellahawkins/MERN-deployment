{"version":3,"sources":["components/Home.js","components/NewPet.js","components/EditPet.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useState","pets","setPets","results","setResults","useEffect","axios","get","then","res","data","catch","err","console","log","className","type","placeholder","onChange","e","searchTerm","target","value","toLowerCase","filter","r","name","includes","map","p","i","key","_id","to","onClick","delete","tempPets","splice","remove","NewPet","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","preventDefault","addedPet","post","navigate","message","EditPet","editPet","action","Details","pet","setPet","likes","adopt","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mPAmEeA,EA/DF,SAAAC,GAAU,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,OAEYF,mBAAS,IAFrB,mBAEXG,EAFW,KAEFC,EAFE,KAGlBC,qBAAY,WACRC,IAAMC,IAAI,kCACLC,MAAK,SAAAC,GACFP,EAAQO,EAAIC,MACZN,EAAWK,EAAIC,SAElBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,IAoBH,OACI,oCACI,2CACA,kEACA,2BAAOG,UAAU,SAASC,KAAK,SAASC,YAAY,eAAYC,SAVlD,SAAAC,GAClB,IAAIC,EAAaD,EAAEE,OAAOC,MAAMC,cAChCnB,EAAWH,EAAKuB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKH,cAAcI,SAASP,UAStD,+BACI,+BACI,4BACI,oCACA,oCACA,wCAGAjB,EAAQyB,KAAK,SAACC,EAAGC,GAAJ,OACT,wBAAIC,IAAKF,EAAEG,KACP,4BAAKH,EAAEH,MACP,4BAAKG,EAAEb,MACP,4BACI,kBAAC,IAAD,CAAMiB,GAAI,IAAMJ,EAAEG,IAAKjB,UAAU,QAAjC,YAEJ,4BACI,kBAAC,IAAD,CAAMkB,GAAI,SAAWJ,EAAEG,IAAKjB,UAAU,QAAtC,SAEJ,4BAAQA,UAAU,OAAOmB,QAAS,SAAAf,GAAC,OAzChD,SAACW,EAAGE,GACfnB,QAAQC,IAAI,kBAAoBgB,GAChCxB,IAAM6B,OAAO,kCAAoCH,GAC5CxB,MAAK,SAAAC,GACFI,QAAQC,IAAIL,GACZ,IAAI2B,EAAQ,YAAOnC,GACnBmC,EAASC,OAAOP,EAAG,GACnB5B,EAAQkC,MAEXzB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAgCiC0B,CAAOR,EAAGD,EAAEG,OAAnD,kBCCjBO,EArDA,SAAAxC,GAAU,IAAD,EACIC,mBAAS,IADb,mBACb0B,EADa,KACPc,EADO,OAEIxC,mBAAS,IAFb,mBAEbgB,EAFa,KAEPyB,EAFO,OAGkBzC,mBAAS,IAH3B,mBAGb0C,EAHa,KAGAC,EAHA,OAIQ3C,mBAAS,IAJjB,mBAIb4C,EAJa,KAILC,EAJK,OAKQ7C,mBAAS,IALjB,mBAKb8C,EALa,KAKLC,EALK,OAMQ/C,mBAAS,IANjB,mBAMbgD,EANa,KAMLC,EANK,OAOQjD,mBAAS,IAPjB,mBAObkD,EAPa,KAOLC,EAPK,KA6BpB,OACI,0BAAMC,SArBK,SAAAjC,GACPA,EAAEkC,iBACF,IAAMC,EAAW,CAAC5B,OAAKV,OAAK0B,cAAaE,SAAQE,SAAQE,UACzD1C,IAAMiD,KAAK,iCAAmCD,GAC3C9C,MAAK,SAAAC,GACDA,EAAIC,KAAKwC,QACVC,EAAU1C,EAAIC,KAAKwC,QACnBrC,QAAQC,IAAIL,EAAIC,KAAKwC,SAEvBM,YAAS,QAEV7C,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAUhB,mCACI,2BAAOI,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIqB,EAAQrB,EAAEE,OAAOC,UAClD4B,EAAOxB,KAAO,0BAAMX,UAAU,SAASmC,EAAOxB,KAAK+B,SAAkB,IAE1E,mCACI,2BAAOzC,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIsB,EAAQtB,EAAEE,OAAOC,UAClD4B,EAAOlC,KAAO,0BAAMD,UAAU,SAASmC,EAAOlC,KAAKyC,SAAkB,IAE1E,0CACI,2BAAOzC,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIwB,EAAexB,EAAEE,OAAOC,UACzD4B,EAAOR,YAAc,0BAAM3B,UAAU,SAASmC,EAAOR,YAAYe,SAAkB,IAExF,gDACA,uCAAY,2BAAOzC,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAI0B,EAAU1B,EAAEE,OAAOC,WACjE,uCAAY,2BAAON,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAI4B,EAAU5B,EAAEE,OAAOC,WACjE,uCAAY,2BAAON,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAI8B,EAAU9B,EAAEE,OAAOC,WACjE,2BAAOP,UAAU,MAAMC,KAAK,SAASM,MAAM,YAC3C,2BAAOP,UAAU,MAAMmB,QAvBZ,SAAAf,GACXqC,YAAS,MAsB+BxC,KAAK,SAASM,MAAM,aCsBzDoC,EAtEC,SAAA3D,GAAU,IAAD,EACGC,mBAAS,IADZ,mBACd0B,EADc,KACRc,EADQ,OAEGxC,mBAAS,IAFZ,mBAEdgB,EAFc,KAERyB,EAFQ,OAGiBzC,mBAAS,IAH1B,mBAGd0C,EAHc,KAGDC,EAHC,OAIO3C,mBAAS,IAJhB,mBAId4C,EAJc,KAINC,EAJM,OAKO7C,mBAAS,IALhB,mBAKd8C,EALc,KAKNC,EALM,OAMO/C,mBAAS,IANhB,mBAMdgD,EANc,KAMNC,EANM,OAOOjD,mBAAS,IAPhB,mBAOdkD,EAPc,KAONC,EAPM,KASrB9C,qBAAW,WACPC,IAAMC,IAAI,kCAAoCR,EAAMiC,KAC/CxB,MAAK,SAAAC,GACF+B,EAAQ/B,EAAIC,KAAKgB,MACjBe,EAAQhC,EAAIC,KAAKM,MACjB2B,EAAelC,EAAIC,KAAKgC,aACxBG,EAAUpC,EAAIC,KAAKkC,QACnBG,EAAUtC,EAAIC,KAAKoC,QACnBG,EAAUxC,EAAIC,KAAKsC,QACnBnC,QAAQC,IAAIL,EAAIC,SAEnBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC9BC,QAAQC,IAAI,sBAAuBf,EAAMiC,OAC1C,CAACjC,EAAMiC,MAwBV,OACI,0BAAMoB,SAvBQ,SAAAjC,GACVA,EAAEkC,iBACF,IAAMM,EAAU,CAACjC,OAAKV,OAAK0B,cAAaE,SAAQE,SAAQE,UACxD1C,IAAMiD,KAAK,kCAAoCxD,EAAMiC,IAAM2B,GACxDnD,MAAK,SAAAC,GACDA,EAAIC,KAAKwC,QACVC,EAAU1C,EAAIC,KAAKwC,QACnBrC,QAAQC,IAAIL,EAAIC,KAAKwC,SAEvBM,YAAS,QAEV7C,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAYhB,mCACI,2BAAOI,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIqB,EAAQrB,EAAEE,OAAOC,QAAQA,MAAOI,IACjEwB,EAAOxB,KAAO,0BAAMX,UAAU,SAASmC,EAAOxB,KAAK+B,SAAkB,IAE1E,mCACI,2BAAOzC,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIsB,EAAQtB,EAAEE,OAAOC,QAAQA,MAAON,IACjEkC,EAAOlC,KAAO,0BAAMD,UAAU,SAASmC,EAAOlC,KAAKyC,SAAkB,IAE1E,0CACI,2BAAOzC,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIwB,EAAexB,EAAEE,OAAOC,QAAQA,MAAOoB,IACxEQ,EAAOR,YAAc,0BAAM3B,UAAU,SAASmC,EAAOR,YAAYe,SAAkB,IAExF,gDACA,uCAAY,2BAAOzC,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAI0B,EAAU1B,EAAEE,OAAOC,QAAQA,MAAOsB,KAChF,uCAAY,2BAAO5B,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAI4B,EAAU5B,EAAEE,OAAOC,QAAQA,MAAOwB,KAChF,uCAAY,2BAAO9B,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAI8B,EAAU9B,EAAEE,OAAOC,QAAQA,MAAO0B,KAChF,2BAAOjC,UAAU,MAAMC,KAAK,SAASM,MAAM,eAC3C,2BAAOP,UAAU,MAAM6C,OAAO,SAAS1B,QAzB1B,SAAAf,GACbqC,YAAS,MAwB+ClC,MAAM,aCxB3DuC,EA3CC,SAAA9D,GAAU,IAAD,EACGC,mBAAS,IADZ,mBACdC,EADc,KACRC,EADQ,OAEAF,mBAAS,IAFT,mBAEf8D,EAFe,KAEVC,EAFU,KAGrB1D,qBAAU,WACNC,IAAMC,IAAI,kCAAoCR,EAAMiC,KAC/CxB,MAAK,SAAAC,GAAG,OAAIsD,EAAOtD,EAAIC,SACvBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,CAACb,EAAMiC,MAgBV,OACI,oCACI,2CACA,kCACI,4BAAQjB,UAAU,cAAlB,iBAA8C+C,EAAIpC,KAAlD,KACA,yCAAeoC,EAAI9C,MACnB,4CAAkB8C,EAAIpB,aACtB,uCACA,4BACI,4BAAKoB,EAAIlB,QACT,4BAAKkB,EAAIhB,QACT,4BAAKgB,EAAId,SAEb,sCAAYc,EAAIE,QAGpB,4BAAQjD,UAAU,OAAOmB,QAAS,SAAAf,GAAC,OA9B7B,SAAC2C,EAAK9B,GAChBnB,QAAQC,IAAI,iBAAmBgD,GAC/BxD,IAAM6B,OAAO,kCAAoCH,GAC5CxB,MAAK,SAAAC,GACFI,QAAQC,IAAIL,GACZ,IAAI2B,EAAQ,YAAOnC,GACnBmC,EAASC,OAAOyB,EAAK,GACrB5D,EAAQkC,MAEXzB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAqBaqD,CAAMH,EAAKA,EAAI9B,OAAtD,qBCpBGkC,MAff,WACE,OACE,oCACE,kBAAC,IAAD,CAAMjC,GAAG,IAAIlB,UAAU,OAAvB,QACA,kBAAC,IAAD,CAAMkB,GAAG,OAAOlB,UAAU,OAA1B,aACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAMoD,KAAK,MACX,kBAAC,EAAD,CAAQA,KAAK,SACb,kBAAC,EAAD,CAASA,KAAK,eACd,kBAAC,EAAD,CAASA,KAAK,aCJFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,MAAK,SAAAwE,GACjCA,EAAaC,kB","file":"static/js/main.9bcaba21.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n\nconst Home = props => {\n    const [pets, setPets] = useState([]);\n    const [results, setResults] = useState([]); \n    useEffect ( () => {\n        axios.get(\"http://localhost:8000/api/pets\")\n            .then(res => {\n                setPets(res.data);\n                setResults(res.data);\n            })   \n            .catch(err => console.log(err)); \n    }, []);\n    //delete\n    const remove = (i, _id) => {\n        console.log(\"lets remove pet\" , i);\n        axios.delete('http://localhost:8000/api/pets/' + _id)\n            .then(res => {\n                console.log(res);\n                let tempPets = [...pets];\n                tempPets.splice(i, 1);\n                setPets(tempPets);\n            })\n            .catch(err => console.log(err));\n    }\n    \n    const filterResults = e => {\n        let searchTerm = e.target.value.toLowerCase();\n        setResults(pets.filter(r => r.name.toLowerCase().includes(searchTerm)));\n    };\n    \n\n    return (\n        <>\n            <h1>Pet Shelter</h1>\n            <h2>These pets are looking for a home!</h2>\n            <input className=\"navbar\" type=\"search\" placeholder=\"&#128269;\" onChange={filterResults}/>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Actions</th>\n                    </tr>\n                    {\n                        results.map( (p, i) => \n                            <tr key={p._id}>\n                                <td>{p.name}</td>\n                                <td>{p.type}</td>\n                                <td>\n                                    <Link to={\"/\" + p._id} className=\"btn2\">Details</Link>\n                                </td>\n                                <td>\n                                    <Link to={\"/edit/\" + p._id} className=\"btn2\">Edit</Link>\n                                </td>\n                                <button className=\"btn3\" onClick={e => remove(i, p._id)}>Delete</button>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport axios from 'axios'; \nimport { navigate } from '@reach/router';\n\n\nconst NewPet = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const AddPet = e => {\n            e.preventDefault();\n            const addedPet = {name,type,description, skill1, skill2, skill3};\n            axios.post(\"http://localhost:8000/api/pets\" , addedPet)\n              .then(res => {\n                if(res.data.errors) {\n                  setErrors(res.data.errors);\n                  console.log(res.data.errors);\n                } else {\n                navigate(\"/\");\n              }})\n              .catch(err => {\n                console.log(err);\n              });\n          }\n\n        const Cancel = e => {\n            navigate(\"/\");\n        }\n\n    return (\n        <form onSubmit={ AddPet }>\n            <p>Name: \n                <input type=\"text\" onChange={e => setName(e.target.value)} ></input>\n                {errors.name ? <span className=\"error\">{errors.name.message}</span> : \"\"}\n            </p>\n            <p>Type: \n                <input type=\"text\" onChange={e => setType(e.target.value)}></input>\n                {errors.type ? <span className=\"error\">{errors.type.message}</span> : \"\"}\n            </p>\n            <p>Description: \n                <input type=\"text\" onChange={e => setDescription(e.target.value)} ></input>\n                {errors.description ? <span className=\"error\">{errors.description.message}</span> : \"\"}\n            </p>\n            <p>Skills(optional):</p>\n            <p>Skill 1: <input type=\"text\" onChange={e => setSkill1(e.target.value)} ></input></p>\n            <p>Skill 2: <input type=\"text\" onChange={e => setSkill2(e.target.value)} ></input></p>\n            <p>Skill 3: <input type=\"text\" onChange={e => setSkill3(e.target.value)} ></input></p>\n            <input className=\"btn\" type=\"submit\" value=\"Add Pet\"/>\n            <input className=\"btn\" onClick={Cancel} type=\"submit\" value=\"Cancel\" />\n     </form>\n    );\n}\n\nexport default NewPet; ","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; \nimport { navigate } from '@reach/router';\n\n\nconst EditPet = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect (() => {\n        axios.get('http://localhost:8000/api/pets/' + props._id)\n            .then(res => {\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkill1(res.data.skill1);\n                setSkill2(res.data.skill2);\n                setSkill3(res.data.skill3);\n                console.log(res.data)}\n                )\n            .catch(err => console.log(err));\n        console.log(\"when does this run?\", props._id);\n    }, [props._id])\n\n    const ChangePet = e => {\n            e.preventDefault();\n            const editPet = {name,type,description, skill1, skill2, skill3};\n            axios.post('http://localhost:8000/api/pets/' + props._id , editPet)\n              .then(res => {\n                if(res.data.errors) {\n                  setErrors(res.data.errors);\n                  console.log(res.data.errors);\n                } else {\n                navigate(\"/\");\n              }})\n              .catch(err => {\n                console.log(err);\n              });\n          }\n\n          const Cancel = e => {\n            navigate(\"/\");\n        }\n\n\n\n    return (\n        <form onSubmit={ ChangePet }>\n            <p>Name: \n                <input type=\"text\" onChange={e => setName(e.target.value)} value={name}></input>\n                {errors.name ? <span className=\"error\">{errors.name.message}</span> : \"\"}\n            </p>\n            <p>Type: \n                <input type=\"text\" onChange={e => setType(e.target.value)} value={type}></input>\n                {errors.type ? <span className=\"error\">{errors.type.message}</span> : \"\"}\n            </p>\n            <p>Description: \n                <input type=\"text\" onChange={e => setDescription(e.target.value)} value={description} ></input>\n                {errors.description ? <span className=\"error\">{errors.description.message}</span> : \"\"}\n            </p>\n            <p>Skills(optional):</p>\n            <p>Skill 1: <input type=\"text\" onChange={e => setSkill1(e.target.value)} value={skill1}></input></p>\n            <p>Skill 2: <input type=\"text\" onChange={e => setSkill2(e.target.value)} value={skill2} ></input></p>\n            <p>Skill 3: <input type=\"text\" onChange={e => setSkill3(e.target.value)} value={skill3}></input></p>\n            <input className=\"btn\" type=\"submit\" value=\"Update Pet\"/>\n            <input className=\"btn\" action=\"action\" onClick={Cancel} value=\"Cancel\" />\n     </form>\n    );\n}\n\nexport default EditPet; ","import React, { useState, useEffect } from 'react'; \nimport axios from 'axios';\n\nconst Details = props => {\n    const [pets, setPets] = useState([]);\n    const[pet, setPet] = useState({});\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets/' + props._id)\n            .then(res => setPet(res.data))\n            .catch(err => console.log(err));\n    }, [props._id])\n\n    const adopt = (pet, _id) => {\n        console.log(\"lets adopt pet\" , pet);\n        axios.delete('http://localhost:8000/api/pets/' + _id)\n            .then(res => {\n                console.log(res);\n                let tempPets = [...pets];\n                tempPets.splice(pet, 1);\n                setPets(tempPets);\n            })\n            .catch(err => console.log(err));\n    }\n\n    \n\n    return (\n        <>\n            <h1>Pet Shelter</h1>\n            <fieldset>\n                <legend className=\"detailHead\">Details about {pet.name}!</legend>\n                <h3>Pet Type: {pet.type}</h3>\n                <h3>Description: {pet.description}</h3>\n                <h3>Skills:</h3>\n                <ul>\n                    <li>{pet.skill1}</li>\n                    <li>{pet.skill2}</li>\n                    <li>{pet.skill3}</li>\n                </ul>\n                <h3>Likes: {pet.likes}</h3>\n            </fieldset>\n            {/* <button className=\"btn4\" >Adopt this pet!</button> */}\n            <button className=\"btn4\" onClick={e => adopt(pet, pet._id)}>Adopt this pet!</button>\n        </>\n    )\n}\nexport default Details;","import React from 'react';\nimport { Router , Link } from '@reach/router';\nimport Home from './components/Home';\nimport NewPet from './components/NewPet';\nimport EditPet from './components/EditPet';\nimport Details from './components/Details';\n\nfunction App() {\n  return (\n    <>\n      <Link to=\"/\" className=\"btn\">Home</Link>\n      <Link to=\"/new\" className=\"btn\">Add a Pet</Link>\n      <Router>\n        <Home path=\"/\" />\n        <NewPet path=\"/new\" />\n        <EditPet path=\"/edit/:_id\" />\n        <Details path=\"/:_id\" />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}